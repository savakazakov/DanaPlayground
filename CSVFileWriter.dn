component provides App requires io.Output out, io.Input in, io.File, data.IntUtil iu, util.Random rand, time.ClockHD
{
    int App:main(AppParam params[])
    {
        out.print("Enter the name of the file: \n")
        char filename[] = "obm-render-stats.csv"
        
        File f = new File(filename, File.WRITE)

        f.write("Frame, Meas1, Meas2, Meas3, Meas4\n")

        int numOfFrames = 100
        int random = rand.getInt(100)

        // Initialise the clock.
        ClockHD chd = new ClockHD()

        int curTimestamp = chd.getTime().nanoseconds
        int prevTimestamp = 0
        
        // Fill in the file.
        for (int i = 0; i < numOfFrames; i++) {
            random = rand.getInt(100)

            for (int j = 0; j < random; j++) {
                // Some work.
                int temp = i * 10 + j + temp
                out.print("$(temp)")                
            }

            curTimestamp = chd.getTime().nanoseconds

            f.write("$(i), $(curTimestamp)\n")

            prevTimestamp = curTimestamp
        }

        f.close()
        
        return 0
    }
}