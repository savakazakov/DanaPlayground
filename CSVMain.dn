uses data.String

component provides App requires data.csv.CSVParser parser, Loader loader, io.Output out, data.DecUtil du, data.IntUtil iu,
CSVUtilExtension cue, io.File, util.Math math, io.TextFile, stats.StatCore sc {
    int App:main(AppParam param[]) {
        // Data to be added to a CSV File.
        int newIntColumn[] = new int[](1000, 1001, 1002, 1003, 1004/* , 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012 */)
        dec newDecColumn[] = new dec[](1000.0, 1001.0, 1002.0, 1003.0/* , 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0 */)
        String newStrColumn[] = new String[]

        dec4 mydec = new dec(2.0)
        out.print("Check\n")
        dec2 myOtherDec = mydec

        out.print("myOtherDec = $(myOtherDec)\n")

        return 0

        for (int i = 0; i < 15; i++)
            newStrColumn = new String[](newStrColumn, new String("number$(i)"))

        // cue.addColumn("test.csv", true, ",", cue.wrapIntArray(new int512[](newIntColumn), 8), 
        //               columnName = "NewColumnInt8"/* , columnNumber = 3 */, limitData = false)
        // cue.addColumn("test.csv", true, ",", newStrColumn,
        //               columnName = "NewColumnStr"/* , columnNumber = 3 */, limitData = false)
        out.print("0 \n")
        // cue.wrapDecArray(new dec512[](newDecColumn), 8)
        out.print("10 \n")
        cue.addColumn("test.csv", true, ",", cue.wrapDecArray(new dec512[](newDecColumn), 8),
                      columnName = "NewColumnDec8"/* , columnNumber = 3 */, limitData = false)

        return 0
        }
    }