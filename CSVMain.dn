uses data.String

component provides App requires data.csv.CSVParser parser, Loader loader, io.Output out, data.DecUtil du, data.IntUtil iu,
CSVUtilExtension cue, io.File, util.Math math, io.TextFile, stats.StatCore sc {
    int App:main(AppParam param[]) {
        // Data to be added to a CSV File.
        int newIntColumn[] = new int[](1000, 1001, 1002, 1003, 1004/* , 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012 */)
        dec newDecColumn[] = new dec[](1000.0, 1001.0/* , 1002.0, 1003.0, 1004.0, 1005.0, 1006.0, 1007.0, 1008.0, 1009.0 */)
        String newStrColumn[] = new String[]

        for (int i = 0; i < 5; i++) {
            newStrColumn = new String[](newStrColumn, new String("Text-$(i)"))
            }

        cue.addColumn("test.csv", true, ",", cue.wrapIntArray(new int512[](newIntColumn), 8), 
                      columnName = "NewColumnInt8"/* , columnNumber = 3 */, limitData = false)
        cue.addColumn("test.csv", true, ",", newStrColumn,
                      columnName = "NewColumnStr"/* , columnNumber = 3 */, limitData = false)
        // cue.addColumn("test.csv", true, ",", cue.wrapDecArray(new dec512[](newDecColumn), 8),
        //               columnName = "NewColumnDec8"/* , columnNumber = 3 */, limitData = false)

        Data newRow = new Data("New_Date", 101000, 101000, 101, 102, 103, 103.0, 104, 105, 106, 107, 108, 109, 101000, 1.1, "New_Str")
                      from cue.inferCSVTemplate("test.csv")

        newRow:.0 = "New_Date"
        newRow:.1 = 100
        newRow:.2 = 101000
        newRow:.3 = 101000
        newRow:.4 = 101
        newRow:.5 = 102
        newRow:.6 = 103.0
        newRow:.7 = 104
        newRow:.8 = 105
        newRow:.9 = 106
        newRow:.10 = 107
        newRow:.11 = 108
        newRow:.12 = 109
        newRow:.13 = 101000
        newRow:.14 = "New_Str"
        // newRow:.15 = 1.1

        cue.addRow("test.csv", true, ",", newRow /*, rowNumber = 3 */, limitData = false)

        return 0
        }
    }